# -*- coding: utf-8 -*-
"""Análise Descritiva - Chamados.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EUb-cB-eCds3zB9o5G36-r6MmRIpo1Yl

#Análise da Base de Chamados do Servicedesk

##Apresentação

Essa análise descritiva foi realizada para conhecimento da realidade quanto ao tempo de resolução dos chamados recebidos e com objetivo de levantar os pontos de melhorias a fim de reduzir seu tempo médio.

**Fonte de Dados**: Planilha extraída do sistema de Service Desk

**Dicionário de Dados**


*   **ID**: Identificador único e interno do chamado
*   **DESCRICAO**: Descrição do requerimento do usuário
*   **NUMERO**: Número único para acompanhamento do chamado
*   **DATA_ABERTURA**: Data da abertura do chamado
*   **USUARIO_SOLICITANTE**: Usuário que fez a requisição
*   **UNIDADE_ORIGEM**: Unidade de lotação do usuário requerente
*   **TIPO**: Classificação do chamado quanto à sua natureza (chamado, requisição, mudança ou incidente)
*   **ESTADO**: Situação do chamado (aberto ou fechado)
*   **IDADE**: Tempo que o chamado levou para ser atendido
*   **DATA_ENCERRAMENTO**: Data em que o chamado foi encerrado
*   **USUARIO_ENCERRAMENTO**: Usuário que procedeu com o encerramento

##Importação das bibliotecas
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
# %matplotlib inline

"""##Carga dos dados"""

chamados = pd.read_excel('/content/drive/MyDrive/Colab Notebooks/Dados/Chamados CSC/chamados.xlsx')

# Filtra os dados de julho de 2021 por estarem incompletos
chamados = chamados.query('(DATA_ABERTURA < "2021-07-01") or (DATA_ENCERRAMENTO < "2021-07-01")')

# Cria as colunas de ano / mês
chamados['ANO_ABERTURA'] = pd.to_numeric(chamados['DATA_ABERTURA'].dt.strftime("%Y"))
chamados['MES_ABERTURA'] = pd.to_numeric(chamados['DATA_ABERTURA'].dt.strftime("%m"))
chamados['ANO_ENCERRAMENTO'] = pd.to_numeric(chamados['DATA_ENCERRAMENTO'].dt.strftime("%Y"))
chamados['MES_ENCERRAMENTO'] = pd.to_numeric(chamados['DATA_ENCERRAMENTO'].dt.strftime("%m"))

chamados.head()

chamados.info()

"""###Cria sub datasets para análises específicas"""

# Dataset por tipo
incidentes = chamados.query('TIPO == "2.Incidente" or TIPO == "4.Problema"')
mudancas = chamados.query('TIPO == "6.Mudança normal" or TIPO == "5.Mudança pré-aprovada"')
requisicoes = chamados.query('TIPO == "3.Requisição de serviço" or TIPO == "7.Atividade"')

# Dataset por ano
chamados_2018 = chamados.query('ANO_ABERTURA == 2018')
chamados_2019 = chamados.query('ANO_ABERTURA == 2019')
chamados_2020 = chamados.query('ANO_ABERTURA == 2020')
chamados_2021 = chamados.query('ANO_ABERTURA == 2021')

"""##Análise da variável idade do chamado"""

chamados['IDADE'].describe()

plt.figure(figsize=(15, 6))
sns.boxplot(chamados['IDADE'])

#Cálculo para excluir os valores outliers da análise
Q1 = chamados['IDADE'].quantile(.25)
Q3 = chamados['IDADE'].quantile(.75)
IIQ = Q3-Q1
limite_inferior = Q1 - (1.5 * IIQ)
limite_superior = Q3 + (1.5 * IIQ)

selecao = (chamados['IDADE'] >= limite_inferior) & (chamados['IDADE'] <= limite_superior)

df = chamados[selecao]
df['IDADE'].describe()

#nova avaliação sem os outliers
plt.figure(figsize=(15, 6))
sns.boxplot(df['IDADE'])

#Análise por tipo do incidente
df.groupby('TIPO')['IDADE'].agg(['count', 'mean', 'min', 'max']).round(3)

plt.figure(figsize=(15, 6))
sns.boxplot(x='TIPO', y='IDADE', data=df, orient='v')

"""##Análise da variável Unidade solicitante"""

chamados_unidades = chamados.groupby('UNIDADE_ORIGEM')['IDADE'].agg(['count']).reset_index()
chamados_unidades.rename(columns={"count": "QTDE_CHAMADOS"}, inplace=True)

# Remove as unidades da sti que abrem chamados em nome de outras
unidades_sti = ['CSC', 'SADS', 'SAS', 'SAD', 'SGCW', 'SGPTI', 'CSIT', 'SARS', 'SGATI', 'SGMPTI', 'SGSTI']

chamados_unidades = chamados_unidades[~chamados_unidades['UNIDADE_ORIGEM'].isin(unidades_sti)]

# Seleciona as 10 unidades com maior número de chamados abertos
chamados_unidades_top_10 = chamados_unidades.sort_values('QTDE_CHAMADOS', ascending=False).head(10)

# Cria o dataframe para o gráfico de comparação entre as top 10 e as demais unidades
soma_chamados = chamados_unidades['QTDE_CHAMADOS'].sum()
soma_top_10 = chamados_unidades_top_10['QTDE_CHAMADOS'].sum()

df_grafico = pd.DataFrame({'UNIDADES': ['Top 10', 'Demais unidades'], 'QTDE_CHAMADOS': [soma_top_10, soma_chamados]})

df_grafico

df_grafico.plot.pie(y='QTDE_CHAMADOS')

chamados_unidades_top_10

"""##Análise Abertura dos Chamados

Análise foi realizada ano a ano para fazer um comparativo distinto
"""

df_grafico = chamados_2018.groupby('MES_ABERTURA')['ID'].agg(['count']).reset_index();
df_grafico.rename(columns={'MES_ABERTURA': 'MÊS', 'count': 'QTDE_CHAMADOS'}, inplace=True)

fig = plt.figure(figsize=(12,6))
sns.barplot(x='MÊS', y='QTDE_CHAMADOS', data = df_grafico)

df_grafico = chamados_2019.groupby('MES_ABERTURA')['ID'].agg(['count']).reset_index();
df_grafico.rename(columns={'MES_ABERTURA': 'MÊS', 'count': 'QTDE_CHAMADOS'}, inplace=True)

fig = plt.figure(figsize=(12,6))
sns.barplot(x='MÊS', y='QTDE_CHAMADOS', data = df_grafico)

df_grafico = chamados_2020.groupby('MES_ABERTURA')['ID'].agg(['count']).reset_index();
df_grafico.rename(columns={'MES_ABERTURA': 'MÊS', 'count': 'QTDE_CHAMADOS'}, inplace=True)

fig = plt.figure(figsize=(12,6))
sns.barplot(x='MÊS', y='QTDE_CHAMADOS', data = df_grafico)

df_grafico = chamados_2021.groupby('MES_ABERTURA')['ID'].agg(['count']).reset_index();
df_grafico.rename(columns={'MES_ABERTURA': 'MÊS', 'count': 'QTDE_CHAMADOS'}, inplace=True)

fig = plt.figure(figsize=(12,6))
sns.barplot(x='MÊS', y='QTDE_CHAMADOS', data = df_grafico)

"""##Análise do Estudo Realizado

**Idade do Chamado**

A idade do chamado (tempo entre a abertura e seu encerramento) está fortemente relacionada com o seu tipo.

Chamados considerados como "mudança" tem uma duração maior do que os demais tipos, o que leva a sugestão de ampliar a equipe destinada ao tratamento das mudanças para que a média geral da idade dos chamados seja reduzida.

**Unidade de Origem**

Não existe uma distribuição uniforme do número de chamado aberto pelas diversas unidades organizacionais.

Existem em torno de 200 unidades, porém, 10 delas são responsáveis pela abertura de aproximandamento 25% dos chamados.

Sugere-se um levantamento nessas unidades para identificar a causa do volume de chamados nessas unidades e as possíveis medidas preventivas para melhorar essa distribuição.

**Período de Abertura dos Chamados**

Não foi identificada uma variação significativa na quantidade de chamados abertos durante os meses do ano.

Uma pequena variação para cima pode ser verificada no segundo semestre, quando existe um incremento no volume de atividades das unidades.
"""

